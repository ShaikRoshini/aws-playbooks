---
- name: SETUP of HA VPC for hosting vprofile stack, create a Jump VPC with a JumpServer in it
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: get my public IP
      ipify_facts:
      register: myip

    - name: Setup Jump VPC
      ec2_vpc_net:
        name: JumpVPC
        cidr_block: 192.168.1.0/24
        region: us-west-1
        tags:
          Author: Imran Teli
          Project: Vprofile
      register: jumpvpcinfo

    - name: Create Public subnet for Jump
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{jumpvpcinfo.vpc.id}}"
        cidr: 192.168.1.0/24
        region: us-west-1
        az: us-west-1a
        resource_tags:
          Name: vpro-pub-Jump
          Author: Imran Teli
      register: jumppubnet

    - name: SETUP IGW for Jump VPC
      ec2_vpc_igw:
        vpc_id: "{{jumpvpcinfo.vpc.id}}"
        state: present
        region: us-west-1
        tags:
          Name: vpro-jump-IGW
          Author: Imran Teli
      register: jumpigw

    - name: Set up public subnet route table for Jump Pub Net
      ec2_vpc_route_table:
        vpc_id: "{{jumpvpcinfo.vpc.id}}"
        region: us-west-1
        tags:
          Name: Vpro-Jump-Pub-RT
          Author: Imran Teli
        subnets:
          - "{{ jumppubnet.subnet.id }}"
        routes:
         - dest: 0.0.0.0/0
           gateway_id: "{{ jumpigw.gateway_id }}"
      register: vproJumpRT
 
    - name: Creating Jump Sec Group
      ec2_group:
        name: VProfile_Jump_Security_Group
        description: Allow Traffic on port 22
        region: us-west-1
        vpc_id: "{{jumpvpcinfo.vpc.id}}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{myip.ansible_facts.ipify_public_ip}}/32"
      register: vproJumpSG

    - name: Create an EC2 key
      ec2_key:
        name: Jump-key
        region: us-west-1
        force: false
      register: jump_keyinfo 

    - debug:
        msg: "{{jump_keyinfo.key.private_key}}"
      when: jump_keyinfo.changed

    - name: save jump private key
      copy:
        content: "{{ jump_keyinfo.key.private_key }}\n" 
        dest: "./jump-key.pem" 
        mode: 0600
      when: jump_keyinfo.changed

    - name: Creating Jump Server
      ec2:
         key_name: Jump-key
         region: us-west-1
         instance_type: t2.micro
         image: ami-8d948ced
         wait: yes
         wait_timeout: 500
         instance_tags:
           Name: JumpServer
           owner: Imran Teli
         exact_count: 1
         count_tag:
           Name: JumpServer
           owner: Imran Teli
         monitoring: no
         vpc_subnet_id: "{{jumppubnet.subnet.id}}"
         assign_public_ip: yes
         group_id: "{{vproJumpSG.group_id}}"
      register: jumpec2info
    - debug:
        msg: "{{jumpec2info}}"
    - name: add jump server ip addresses to hosts group
      add_host:
        hostname: "{{jumpec2info.tagged_instances[0].public_ip}}"
        ansible_ssh_user: ubuntu
        ansible_ssh_private_key_file: jump-key.pem
        ansible_python_interpreter: /usr/bin/python2.7
        groups: jumpservers


    - name: Setup vprofile stack VPC
      ec2_vpc_net:
        name: vprofile-havpc
        cidr_block: 172.20.0.0/16
        region: us-west-1
        tags:
          Author: Imran Teli
          Project: Vprofile
      register: vpcinfo


    - name: Create Public subnet 1
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpcinfo.vpc.id}}"
        cidr: 172.20.1.0/24
        region: us-west-1
        az: us-west-1a
        resource_tags:
          Name: vpro-pub-1
          Author: Imran Teli
      register: pub1info


    - name: Create Public subnet 2
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpcinfo.vpc.id}}"
        cidr: 172.20.2.0/24
        region: us-west-1
        az: us-west-1b
        resource_tags:
          Name: vpro-pub-2
          Author: Imran Teli
      register: pub2info


    - name: Create Private subnet 1
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpcinfo.vpc.id}}"
        cidr: 172.20.3.0/24
        region: us-west-1
        az: us-west-1a
        resource_tags:
          Name: vpro-priv-1
          Author: Imran Teli
      register: priv1info


    - name: Create Private subnet 2
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{vpcinfo.vpc.id}}"
        cidr: 172.20.4.0/24
        region: us-west-1
        az: us-west-1b
        resource_tags:
          Name: vpro-priv-2
          Author: Imran Teli
      register: priv2info

    - name: SETUP IGW
      ec2_vpc_igw:
        vpc_id: "{{vpcinfo.vpc.id}}"
        state: present
        region: us-west-1
        tags:
          Name: vpro-IGW
          Author: Imran Teli
      register: igw


    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcinfo.vpc.id}}"
        region: us-west-1
        tags:
          Name: Vpro-Pub-RT
          Author: Imran Teli
        subnets:
          - "{{ pub1info.subnet.id }}"
          - "{{ pub2info.subnet.id }}"
        routes:
         - dest: 0.0.0.0/0
           gateway_id: "{{ igw.gateway_id }}"
      register: vproPubRT 


    - name: Create new nat gateway, using an EIP address  and wait for available status.
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{ pub1info.subnet.id  }}"
        wait: yes
        region: us-west-1
        if_exist_do_not_create: true
      register: vpronatGW

      
    - name: Set up NAT-protected route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcinfo.vpc.id}}"
        region: us-west-1
        tags:
          Name: Vpro-Priv-RT
          Author: Imran Teli
        subnets:
          - "{{ priv1info.subnet.id }}"
          - "{{ priv2info.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            nat_gateway_id: "{{vpronatGW.nat_gateway_id}}"
      register: vproPrivRT

    - name: Creating ELB Sec Group
      ec2_group:
        name: VProfile_ELB_Security_Group
        description: Allow Traffic on port 80
        region: us-west-1
        vpc_id: "{{vpcinfo.vpc.id}}"
        rules:
          - proto: tcp
            ports:
              - 80
              - 443
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 80
      register: vproELBSG

    - name: Creating Vprofile Security Group
      ec2_group:
        name: VProfile_Stack_Security_Group
        description: Allow Traffic on port 80 and 443 from elbsg
        region: us-west-1
        vpc_id: "{{vpcinfo.vpc.id}}"
        rules:
          - proto: tcp
            from_port: 443
            to_port: 443
            group_id: "{{vproELBSG.group_id}}"
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG.group_id}}"
      register: vproStackSG

    - name: Create local account VPC peering Connection
      ec2_vpc_peer:
        region: us-west-1
        vpc_id: "{{jumpvpcinfo.vpc.id}}"
        peer_vpc_id: "{{vpcinfo.vpc.id}}"
        state: present
        tags:
          Name: Peering connection for Jump VPC  to Vprofile stack VPC
          Project: Vprofile
      register: vpc_peer

    - name: Accept local VPC peering request
      ec2_vpc_peer:
        region: us-west-1
        peering_id: "{{ vpc_peer.peering_id }}"
        state: accept
      register: action_peer


    - name: Allow all traffic within vprofile stack
      ec2_group:
        name: VProfile_Stack_Security_Group
        description: Allow Traffic on port 80 and 443 from elbsg
        region: us-west-1
        vpc_id: "{{vpcinfo.vpc.id}}"
        rules:
          - proto: tcp
            from_port: 443
            to_port: 443
            group_id: "{{vproELBSG.group_id}}"
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG.group_id}}"
          - proto: all
            group_id: "{{vproStackSG.group_id}}"
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{vproJumpSG.group_id}}"
      register: vproStackSG

    - file:
        path: vpro_stack_setup/group_vars/vars4VPROstack
        state: touch

    - name: Add info to variable file
      blockinfile:
        dest: vpro_stack_setup/group_vars/vars4VPROstack
        block: |
          vprostackvpcID: {{vpcinfo.vpc.id}}
          vpropub1net: {{pub1info.subnet.id}}
          vpropub2net: {{pub2info.subnet.id}}
          vpropriv1net: {{priv1info.subnet.id}}
          vpropriv2net: {{priv2info.subnet.id}}
          vproSGID: {{vproStackSG.group_id}}

    - name: Compress Ansible data dir to vpro_stack_setup.tar.gz
      archive:
        path: vpro_stack_setup
        dest: vpro_stack_setup.tar.gz

- name: Setup Jump server with ansible, playbooks and neccessay credentials
  hosts: jumpservers
  remote_user: ubuntu 
  become: yes
  gather_facts: no
  tasks:
    - name: install python2.7
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

    - name: Add ansible repo
      apt_repository:
        repo: ppa:ansible/ansible
   
    - name: Install ansible
      apt:
        name: ansible
        state: present
        update_cache: yes
        cache_valid_time: 86400
    
#    - name: Push vpro_stack_setup.tar.gz to jump server
#      copy:
#         src: vpro_stack_setup.tar.gz
#         dest: /home/ubuntu/vpro_stack_setup.tar.gz

    - name: Extract /home/ubuntu/vpro_stack_setup.tar.gz
      unarchive:
         src: vpro_stack_setup.tar.gz
         dest: /home/ubuntu/
         remote_src: yes
